---
title: Redis
owner: Services
---


## <a id='integrating-your-service'></a> Integrating the Service With Your App

After the [creation](../devguide/services/managing-services.html#create) of the service and the [binding](../devguide/services/application-binding.html#bind) of the service to the application, the environment variable [VCAP_SERVICES](../devguide/deploy-apps/environment-variable.html#VCAP-SERVICES) is created. Information about the credentials are stored in this variable as shown here:

```json
{
  "redis-2": [
    {
      "credentials": {
        "host": "kubernetes-service-node.service.consul",
        "master_port": 53574,
        "password": "Qo31B0f5FWTXywJX7ZMG3OOZNLCVg9",
        "port": 53574,
        "slave_ports": [
          42613,
          35581
        ]
      },
      "label": "redis-2",
      "name": "redis-example",
      "plan": "small",
      "tags": [
       "redis"
      ]
    }
  ]
}
```

<p class="note">
  <strong>Important:</strong> Please be aware that the number of concurrent connections to Redis is limited depending on the service plan you chose. You can manage this by using connection pooling.
</p>

## <a id='administrating'></a> Administrating your Redis instances

To connect to a running Redis instance with your local development tools, you can use the [`cf ssh`](../devguide/deploy-apps/ssh-services.html) feature of the cf CLI.

## <a id='sample-application'></a> Sample Application

Swisscom: [Redis Example](https://github.com/swisscom/cf-redis-example-app)

## <a id='limitations'></a> Limitations

Due to security reasons the following commands are disabled:
CONFIG, CLUSTER, DEBUG, INFO, MIGRATE, ROLE, SLAVEOF
